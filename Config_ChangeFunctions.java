package com.functions;

import static com.actions.IDECATIA.focusCATIA;
import static com.actions.IDECATIA.focusWin;
import static com.actions.IDECATIA.searchNAction;
import static com.actions.IDECATIA.selectObjFromSearch;
import static com.actions.TreeHandle.r;
import static com.core.General.sleep;
import static com.core.LocalRegion.*;
import static com.core.LogReport.info;
import static com.functions.Config_ChangeFunctions.fn_ConfigChangeNavigatetoTab;
import static com.functions.Config_ChangeFunctions.nativeChangeImagePath;
import static com.functions.Config_Functions.fn_ConfigRenameAutoGeneratedProduct;
import static com.functions.Enovia_Functions.fn_Save;
import static com.actions.IDERegion.*;
import static com.actions.ImageString.*;
import static com.actions.IDEReferenceImg.*;

import org.sikuli.script.FindFailed;
import org.sikuli.script.Key;
import org.sikuli.script.Match;
import org.sikuli.script.Pattern;
import org.sikuli.script.Screen;

import com.actions.IDECATIA;
import com.actions.ImageString;
import com.actions.Window;
import com.core.Settings;
import com.core.StaticImages;
import com.core.StaticImages.*;
import com.thoughtworks.selenium.webdriven.commands.WaitForCondition;

import static com.functions.Import.*; 
import static com.functions.Export.*;
import com.actions.Window.*;


import org.sikuli.script.FindFailed;

import com.core.Settings;

public class Config_ChangeFunctions {
	public static String nativeChangeImagePath = Settings.imagespath + "ScenarioClick//cat.Config//NativeImagesChange//";
	//static String e1;
	
	/* Author        : P16
	 * Date Created  : 18th July 2018
	 * Date Modified :  
	 * Method Name : fn_ConfigChangeClickonWorkUnderIcon()
	 *  Returns     : Void
	 *  Pre-requisites before Calling this Method : 
	 *  Input : PartName :
	 *  Output : 
	 */	
	
	public static void fn_ConfigChangeClickonWorkUnderIcon() throws FindFailed{
		focusCATIA();
		try{
		//fn_ConfigChangeNavigatetoTab("Properties");
		setRegionForFindStr(getCATIARegion());
		findImage(nativeChangeImagePath+"CAToolsMenuDropdown.png").click();
		//findStr("Work Under").click();
		findStr("Work Under").matchObj.offset(0, 0).click();
		}catch (Exception e){
			try {
				findImage(nativeChangeImagePath+"CAWorkUnderinDropdown.png").click();
			}
			catch(Exception e1){
			findImage(nativeChangeImagePath+"CHGWorkUnderIconImg17x.png").click();
			}
		}
	}
	/* Author        : P16
	 * Date Created  : 18th July 2018
	 * Date Modified :  
	 * Method Name : fn_ConfigChangeCreateCANative(String PartName)
	 *  Returns     : Void
	 *  Pre-requisites before Calling this Method : 
	 *  Input : PartName :
	 *  Output : 
	 */	
	
	public static void fn_ConfigChangeCreateCANative(String CAName, String CAdescription, String CASeverity) throws FindFailed, InterruptedException{
		fn_contentObjects1("Change Action");
		String winName = "Change Action";
		Window win1 = new Window(winName);
		waitUntilExists(winName, 5);
		focusWin(winName);
		findStr("Title").matchObj.offset(150, 0).click();
		r.type("a",Key.CTRL);
	 	r.type(CAName);
	 	findStr("Descr").matchObj.offset(150, 0).click();
	 	r.type(CAdescription);
	 	if(CASeverity!="Low")
		{
	 		findStr("Severit").matchObj.offset(150, 0).hover();
			findStr("Severit").matchObj.offset(150, 0).click();
			findStr(CASeverity).click();
		}
		else
		{}
		findStr("OK").click();
	}
	

	public static void fn_ConfigChangeNavigatetoTab(String CATabname)throws FindFailed, InterruptedException{
		if(CATabname=="Properties")
			{
			try {
				focusCATIA();
				setRegionForFindStr(getCATIARegion());
				findStr("Properties").matchObj.offset(0,0).click();
			}
			catch (Exception e){
				
				try{
					focusCATIA();
					setRegionForFindStr(getCATIARegion());
					findImage(nativeChangeImagePath+"CAPropertiesTab.png").click();
					}
					catch (Exception e1){
						try{
							focusCATIA();
							setRegionForFindStr(getCATIARegion());
							findImage(nativeChangeImagePath+"CAPropertiesTabIcon.png").click();
							}
					finally{
						
							info("Properties Tab not Present Error observed");
							}
						}
					}
				}
		else if(CATabname=="Team")
		{
		try {
			focusCATIA();
			setRegionForFindStr(getCATIARegion());
			findStr("Team").matchObj.offset(0,0).click();
		}
		catch (Exception e){
			
			try{
				focusCATIA();
				setRegionForFindStr(getCATIARegion());
				findImage(nativeChangeImagePath+"CATeamTab.png").click();
				}
				catch (Exception e1){
					try{
						focusCATIA();
						setRegionForFindStr(getCATIARegion());
						findImage(nativeChangeImagePath+"CATeamTabIcon.png").click();
						}
				finally{
					
						info("Team Tab not Present Error observed");
						}
					}
				}
			}
		else if (CATabname=="Proposed Changes")
		{
		try {
			focusCATIA();
			setRegionForFindStr(getCATIARegion());
			findStr("Proposed Changes").matchObj.offset(0,0).click();
		}
		catch (Exception e){
			
			try{
				focusCATIA();
				setRegionForFindStr(getCATIARegion());
				findImage(nativeChangeImagePath+"CAProposedChangesTab.png").click();
				}
				catch (Exception e1){
					try{
						focusCATIA();
						setRegionForFindStr(getCATIARegion());
						findImage(nativeChangeImagePath+"CAProposedChangesTabIcon.png").click();
						}
				finally{
					
						info("Proposed Changes Tab not Present Error observed");
						}
					}
				}
			}
		
		else if (CATabname=="Realized Changes")
		{
		try {
			focusCATIA();
			setRegionForFindStr(getCATIARegion());
			findStr("Realized Changes").matchObj.offset(0,0).click();
		}
		catch (Exception e){
			
			try{
				focusCATIA();
				findImage(nativeChangeImagePath+"CARealisedChangesTab.png").click();
				}
				catch (Exception e1){
					try{
						focusCATIA();
						findImage(nativeChangeImagePath+"CARealisedChangesTabIcon.png").click();
						}
				finally{
					
						info("Realised Changes Tab not Present Error observed");
						}
					}
				}
			}
		else if (CATabname=="Referential")
		{
		try {
			focusCATIA();
			setRegionForFindStr(getCATIARegion());
			findStr("Referential").matchObj.offset(0,0).click();
		}
		catch (Exception e){
			
			try{
				focusCATIA();
				findImage(nativeChangeImagePath+"CAReferentialTab.png").click();
				}
				catch (Exception e1){
					try{
						focusCATIA();
						findImage(nativeChangeImagePath+"CAReferentialTabIcon.png").click();
						}
				finally{
					
						info("Referential Tab not Present Error observed");
						}
					}
				}
			}
		else if (CATabname=="Applicability")
		{
		try {
			focusCATIA();
			setRegionForFindStr(getCATIARegion());
			findStr("Applicability").matchObj.offset(0,0).click();
		}
		catch (Exception e){
			
			try{
				focusCATIA();
				findImage(nativeChangeImagePath+"CAApplicabilityTab.png").click();
				}
				catch (Exception e1){
					try{
						focusCATIA();
						findImage(nativeChangeImagePath+"CAApplicabilityTabIcon.png").click();
						}
				finally{
						info("Properties Tab not Present Error observed");
						}
					}
				}
			}
		
		else if (CATabname=="Context")
		{
		try {
			focusCATIA();
			setRegionForFindStr(getCATIARegion());
			findStr("Context").matchObj.offset(0,0).click();
		}
		catch (Exception e){
			try{
				focusCATIA();
				findImage(nativeChangeImagePath+"CAContextTab.png").click();
				}
				catch (Exception e1){
					try{
						focusCATIA();
						findImage(nativeChangeImagePath+"CAContextTabIcon.png").click();
						}
				finally{
					
						info("Context Tab not Present Error observed");
						}
					}
				}
			}
		}

	public static void fn_ConfigChangeAddObject()throws FindFailed, InterruptedException{
		focusCATIA();
		setRegionForFindStr(getCATIARegion());
		findImage(nativeChangeImagePath+"CAAddObjectButton.png").click();
	}
	
	

	
	//FUnction to transfer Ownership of CA
	
	public static void fn_ConfigChangeTransferOwnershipCA (String CAusername, String CAReasonforTransfer)throws FindFailed, InterruptedException{
		focusCATIA();
		findImage(nativeChangeImagePath+"CATransferOwnershipIcon.png").matchObj.offset(0, 0).click();
		
		try{
			r.type("a",Key.CTRL);
		 	r.type(CAReasonforTransfer);
		 	findImage(nativeChangeImagePath+"CATransferOwnershipSearchIcon.png").matchObj.offset(0, 0).click();
			selectObjFromSearch(CAusername, "datagrid");
			setRegionForFindStr(getCATIARegion());
			findStr("Cancel").matchObj.offset(-75,0).click();
		 	
		}
		catch (Exception e){
			try {
			setRegionForFindStr(getCATIARegion());
			findStr("Reason").matchObj.offset(0,30).click();
			r.type("a",Key.CTRL);
		 	r.type(CAReasonforTransfer);
		 	findImage(nativeChangeImagePath+"CATransferOwnershipSearchIcon.png").matchObj.offset(0, 0).click();
			selectObjFromSearch(CAusername, "datagrid");
			setRegionForFindStr(getCATIARegion());
			findStr("Cancel").matchObj.offset(-75,0).click();
			}
			catch(Exception e1) {
				info("Transfer Ownership was not successful");
			}
		}
	
	}

	public static void fn_ConfigChangeLifecycleStateofCA(String CAState)throws FindFailed, InterruptedException{
		try{
			if(CAState=="Promote"){
				focusCATIA();
				findImage(nativeChangeImagePath+"CAPromoteIcon.png").matchObj.offset(0, 0).click();
			}
			else if(CAState=="Demote")
			{
			focusCATIA();
			findImage(nativeChangeImagePath+"CADemoteIcon.png").matchObj.offset(0, 0).click();
			}
			else
			{
				
			}	
		}
		catch (Exception e1){
			info("CA change Maturity  was not successful"+e1);
		}
		
	}
	
	//Function to add user as assignee or Reviewer or Follower
	
	public static void fn_ConfigChangeCAAddMembers(String CAMemberType, String CAMemberName)throws FindFailed, InterruptedException{
	
		try{
			focusCATIA();
			findImage(nativeChangeImagePath+"CAAddMembersButton.png").matchObj.offset(0,0).click();
			if(CAMemberType=="Assignee"){
				findImage(nativeChangeImagePath+"CAMembers.png").matchObj.offset(130, 50).click();
			}
			else if (CAMemberType=="Reviewer"){
				findImage(nativeChangeImagePath+"CAMembers.png").matchObj.offset(130, 100).click();
			}
			else {
				findImage(nativeChangeImagePath+"CAMembers.png").matchObj.offset(130, 150).click();
			}
			r.type(CAMemberName);
			waitUntilElementPresent(CAMemberName, 10);
		 	aroundCurrentMousePosition(0,0).offset(40,40).hover();
		 	aroundCurrentMousePosition(0,0).offset(0,0).click();
		 	findStr("Cancel").matchObj.offset(-75,0).click();
		}
			catch(Exception e){
				info("Add Members failed"+e);
			}	
		}
	
	public static void fn_ConfigChangeAddProposedChangeSearch(String CAProposedChangeObjectName) throws FindFailed, InterruptedException{

		try{
			focusCATIA();
			findImage(nativeChangeImagePath+"CAAddProposedChangeSearchIcon.png").matchObj.offset(0, 0).click();
			selectObjFromSearch(CAProposedChangeObjectName, "Thumbnails");

		}
		catch (Exception e){
			try {
				setRegionForFindStr(getCATIARegion());
				findStr("Object").matchObj.offset(180,32).click();
				selectObjFromSearch(CAProposedChangeObjectName, "Thumbnails");	
				}			
				catch(Exception e1){
					try{
						focusCATIA();
						findImage(nativeChangeImagePath+"CAAddProposedChange.png").matchObj.offset(188, 112).click();
						selectObjFromSearch(CAProposedChangeObjectName, "Thumbnails");
					}
				finally{
					info("Add Proposed change page is available");
				}
			
			}
		}
}

	public static void fn_ConfigChangeAddProposedChange(String CAProposedChange, String CAProposedChangeObjectName) throws FindFailed, InterruptedException{
			focusCATIA();
			fn_ConfigChangeAddObject();
			fn_ConfigChangeAddProposedChangeSearch(CAProposedChangeObjectName);
			findImage(nativeChangeImagePath+"CAProposedChangeDropdown.png").matchObj.offset(0,0).click();
//			try{
//			findStr("Change Maturity").matchObj.offset(0,0).click();
//			}
//			catch (Exception e) {
//				findImage(nativeChangeImagePath+"CAProposedChangeDropdown.png").matchObj.offset(0,75).click();
//			}
			if(CAProposedChange=="Release")
					{
					findStr("Release").matchObj.offset(0,0).hover();
					findImage(nativeChangeImagePath+"CAAddButton.png").matchObj.offset(0,0).click();
					}
			else if(CAProposedChange=="Obsolete")
			{
				findStr("Release").matchObj.offset(0,0).click();
				findStr("Obsolete").matchObj.offset(0,0).click();
				findImage(nativeChangeImagePath+"CAAddButton.png").matchObj.offset(0,0).click();
			}
			if(CAProposedChange=="Evolution"){
				try{
					findStr("Evolution").matchObj.offset(0,0).click();
					focusCATIA();
					findStr("Name").matchObj.offset(0,40).click();
					r.type("a",Key.CTRL);
					r.type("NewEvolution_");
							}
				catch (Exception e){
					findImage(nativeChangeImagePath+"CAProposedChangeDropdown.png").matchObj.offset(0,74).click();
					focusCATIA();
					findStr("Name").matchObj.offset(0,40).click();
					r.type("a",Key.CTRL);
					r.type("NewEvolution_");
					}
				}
				else if(CAProposedChange=="Revision"){
					try{
						findStr("Revision").matchObj.offset(0,0).click();
								}
					catch (Exception e){
						findImage(nativeChangeImagePath+"CAProposedChangeDropdown.png").matchObj.offset(0,112).click();
					
					}
				}
				else{
				info("Proposed Change to be added for Modify");
				}
			try{
				findStr("Cancel").matchObj.offset(-150,0).click();
						}
			catch (Exception e){
			findImage(nativeChangeImagePath+"CAAddButton.png").matchObj.offset(0,0).click();
			}
	}
	
	public static void fn_ConfigChangeProposedModifyOperation(String CA)throws FindFailed, InterruptedException{
		
	}
	
	/* Author        : P16
	 * Date Created  : 24th Sep 2018
	 * Date Modified :  
	 * Method Name : fn_editproperties(objectname1, objectname2)
	 *  Returns     : Void
	 *  Pre-requisites before Calling this Method : 
	 *  Input : PartName :
	 *  Output : 
	 */	
	
	public static void fn_editproperties(String objectname1, String objectname2)throws FindFailed, InterruptedException{
		focusCATIA();
		setRegionForFindStr(getCATIARegion());
		
		//String nativeImagePath = "ImageFiles\\ScenarioClick\\cat.Config\\NativeImages\\";
		findStr(objectname1).rightClick();
		findStr("Properties").matchObj.offset(0,0).click();
    	focusWin("Properties");
    	
    	findStr("Title").matchObj.offset(150,0).click();
    	r.type("a",Key.CTRL);
	 	r.type(objectname2);
	 	findStr("OK").matchObj.offset(0,0).click();
	 	focusCATIA();
		
	}
	
	/* Author        : P16
	 * Date Created  : 24th Sep 2018
	 * Date Modified :  
	 * Method Name : fn_managerevisions(objectname1, )
	 *  Returns     : Void
	 *  Pre-requisites before Calling this Method : 
	 *  Input : PartName :
	 *  Output : 
	 */	
		public static void fn_managerevisions(String objectname1)throws FindFailed, InterruptedException{
			focusCATIA();
			setRegionForFindStr(getCATIARegion());
			try{
				String nativeImagePath = "ImageFiles\\ScenarioClick\\cat.Config\\NativeImages\\";
				findStr(objectname1).rightClick();
				findStr("Insert").matchObj.offset(0,25).hover();
				//findStr("Replace").matchObj.offset(0,0).click();
				findStr("Manage Latest Revisions").matchObj.offset(0,0).click();
				focusWin("Manage Latest Revisions");
			 	findStr("OK").matchObj.offset(0,0).click();
			 	focusWin("Manage Latest Revisions Reporter");
			 	findStr("OK").matchObj.offset(0,0).click();
			 	focusCATIA();
			}
			catch (Exception e){
				//error here
			}

			
	}
		
		/* Author        : P16
		 * Date Created  : 24th Sep 2018
		 * Date Modified :  
		 * Method Name : fn_replacebyexisting(objectname1)
		 *  Returns     : Void
		 *  Pre-requisites before Calling this Method : 
		 *  Input : PartName :
		 *  Output : 
		 */	
			public static void fn_replacebyexisting(String objectname1, String objectname2)throws FindFailed, InterruptedException{
				focusCATIA();
				setRegionForFindStr(getCATIARegion());
				
				//String nativeImagePath = "ImageFiles\\ScenarioClick\\cat.Config\\NativeImages\\";
				findStr(objectname1).rightClick();
				findStr("Replace").matchObj.offset(0,0).click();
				findStr("Insert").matchObj.offset(0,25).hover();
				findStr("Replace by Existing").matchObj.offset(0,0).click();
			 	selectObjFromSearch(objectname2, "datagrid");
			 	focusCATIA();
				
		}
			
			/* Author        : 
			 * Date Created  : 24th Sep 2018
			 * Date Modified :  
			 * Method Name : fn_contentObjects(String object)
			 *  Returns     : Void
			 *  Pre-requisites before Calling this Method : 
			 *  Input : PartName :
			 *  Output : 
			 */	
			
			public static void fn_contentObjects1(String object) throws FindFailed, InterruptedException
			
			
			{
			focusCATIA();
			Screen sc = new Screen();	
			r.type("n",Key.CTRL);
			//selectTopMenu("Content...");
			Thread.sleep(2000);
			sc.click(StaticImages.fn_clearSrch());
			org.sikuli.script.Match m1 = sc.find(StaticImages.fn_clearSrch());
			m1.offset(-50, 0).click(); 
			r.type(object);
			r.type(Key.ENTER);
			
			if(object=="Engineering Folder")
			{
				findStr("Folder").clickBelow();
				//sleep(4000);
			}

			if(object=="Document")
			{
				findStr("Document").clickOffset(0, 30);
				sleep(4000);
			}
			if(object=="Physical Product")
			{
				
				findStr("physical Product").clickBelow();
			
			}
			if(object=="Core Material")
			{
				findStr(" Core Material ").click();

			}
			if(object=="Drawing")
			{
				
				findStr("Drafting").clickBelow();
			
			}
			if(object=="Engineering Document")
			{
			
				findStr("Document").clickOffset(0, 20);
				
			}
			if(object=="3D Part")
			{
				
				findStr("physical Product").clickBelow();
				sleep(4000);
			}
			
			if(object=="3D Shape")
			{
				
				findStr("physical Product").clickBelow();
				sleep(4000);
				
			}
			if(object=="Bookmark")
			{
				findStr("Workspace").clickBelow();
				sleep(4000);
			}
			if(object=="cat")
			{
				findStr("Catalog").clickBelow();
				sleep(4000);
			}
			if(object=="Component")
			{
				findStr("Component").clickBelow();
				sleep(4000);
			}
			if(object=="Change Action")
			{
			try
			{
				findStr("Change Action").clickBelow();
				sleep(4000);
			}
			catch (Exception e)
			{
				findImage(nativeChangeImagePath+"CAcreatePage.png").matchObj.offset(0,0).click();
			}
			}
			}
			
			
			/* Author        : P16
			 * Date Created  : 24th Sep 2018
			 * Date Modified :  
			 * Method Name : fn_replacebyexisting(objectname1)
			 *  Returns     : Void
			 *  Pre-requisites before Calling this Method : 
			 *  Input : PartName :
			 *  Output : 
			 */	
				public static void fn_changeTabinProperties(String objectname1)throws FindFailed, InterruptedException{
					focusCATIA();
					searchNAction(objectname1, "Properties", "Thumbnails");
					findStr("Change").matchObj.offset(0, 0).click();
					
			}
				/* Author        : P16
				 * Date Created  : 24th Sep 2018
				 * Date Modified :  
				 * Method Name : fn_replacebyexisting(objectname1)
				 *  Returns     : Void
				 *  Pre-requisites before Calling this Method : 
				 *  Input : PartName :
				 *  Output : 
				 */	
					public static void fn_CAApproveReject(String ApprovalType)throws FindFailed, InterruptedException{
						focusCATIA();
						if(ApprovalType=="Approve"){
							try{
								findImage(nativeChangeImagePath+"CAApproveButton.png").matchObj.offset(0,0).click();
								r.type("a",Key.CTRL);
							 	r.type("Approved");
							 	findImage(nativeChangeImagePath+"CACancelButton.png").matchObj.offset(-75,0).click();
							}
							catch (Exception e1){
								try {
									findImage(nativeChangeImagePath+"CAToolsMenuDropdown.png").matchObj.offset(0,0).click();
									findStr("Approve").matchObj.offset(0, 0).click();
									r.type("a",Key.CTRL);
								 	r.type("Approved");
								 	findImage(nativeChangeImagePath+"CACancelButton.png").matchObj.offset(-75,0).click();
								}
								catch (Exception e2){
									findImage(nativeChangeImagePath+"CAApprovefromDD.png").matchObj.offset(0,0).click();
									r.type("a",Key.CTRL);
								 	r.type("Approved");
								 	findImage(nativeChangeImagePath+"CACancelButton.png").matchObj.offset(-75,0).click();
								}
								
							}
						}				
				}			
				
}
	
